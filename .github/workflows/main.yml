name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v3  # Update to the latest version

      - name: Set up Node.js
        uses: actions/setup-node@v3  # Update to the latest version
        with:
          node-version: '20'  # Specify your Node.js version

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test
        continue-on-error: false  # If a test fails, the pipeline stops

      # Optional: Run linter if you have one
      - name: Run linter
        run: npm run lint

  docker:
    needs: build  # Ensures tests complete before this step
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3  # Update to the latest version

      - name: Log in to Docker Hub
        uses: docker/login-action@v2  # Update to the latest version
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t your-image-name:${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker tag your-image-name:${{ github.sha }} your-docker-repo/your-image-name:latest
          docker push your-docker-repo/your-image-name:latest

  notify:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Notify on success
        run: echo "Build and Docker Push completed successfully!"  # Replace with actual notification logic
